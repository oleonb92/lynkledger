# Generated by Django 4.2.10 on 2025-05-18 22:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('document_type', models.CharField(choices=[('invoice', 'Invoice'), ('receipt', 'Receipt'), ('contract', 'Contract'), ('report', 'Report'), ('tax', 'Tax Document'), ('other', 'Other')], default='other', max_length=20, verbose_name='document type')),
                ('file', models.FileField(upload_to='documents/%Y/%m/%d/', verbose_name='file')),
                ('file_size', models.BigIntegerField(default=0, verbose_name='file size')),
                ('file_type', models.CharField(blank=True, max_length=50, verbose_name='file type')),
                ('original_filename', models.CharField(max_length=255, verbose_name='original filename')),
                ('ocr_content', models.TextField(blank=True, verbose_name='OCR content')),
                ('is_ocr_processed', models.BooleanField(default=False, verbose_name='OCR processed')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('archived', 'Archived')], default='draft', max_length=20, verbose_name='status')),
                ('document_date', models.DateField(blank=True, null=True, verbose_name='document date')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='due date')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='expiry date')),
                ('tags', models.JSONField(blank=True, default=list, verbose_name='tags')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='metadata')),
                ('is_private', models.BooleanField(default=False, verbose_name='private')),
                ('is_template', models.BooleanField(default=False, verbose_name='template')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_documents', to=settings.AUTH_USER_MODEL, verbose_name='approved by')),
            ],
            options={
                'verbose_name': 'document',
                'verbose_name_plural': 'documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PublicShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=64, unique=True, verbose_name='token')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='expires at')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('requires_password', models.BooleanField(default=False, verbose_name='requires password')),
                ('password_hash', models.CharField(blank=True, max_length=128, verbose_name='password hash')),
                ('access_count', models.IntegerField(default=0, verbose_name='access count')),
                ('last_accessed', models.DateTimeField(blank=True, null=True, verbose_name='last accessed')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='public_shares_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='public_shares', to='documents.document', verbose_name='document')),
            ],
            options={
                'verbose_name': 'public share',
                'verbose_name_plural': 'public shares',
            },
        ),
        migrations.CreateModel(
            name='DocumentComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='content')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('is_edited', models.BooleanField(default=False, verbose_name='edited')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='documents.document', verbose_name='document')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='documents.documentcomment', verbose_name='parent comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_comments', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'document comment',
                'verbose_name_plural': 'document comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='icon')),
                ('color', models.CharField(default='#000000', max_length=7, verbose_name='color')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_document_categories', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_categories', to='organizations.organization', verbose_name='organization')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='documents.documentcategory', verbose_name='parent category')),
            ],
            options={
                'verbose_name': 'document category',
                'verbose_name_plural': 'document categories',
                'ordering': ['name'],
                'unique_together': {('organization', 'name', 'parent')},
            },
        ),
        migrations.AddField(
            model_name='document',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents', to='documents.documentcategory', verbose_name='category'),
        ),
        migrations.AddField(
            model_name='document',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_documents', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='document',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='document',
            name='related_documents',
            field=models.ManyToManyField(blank=True, to='documents.document', verbose_name='related documents'),
        ),
        migrations.CreateModel(
            name='DocumentShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.CharField(choices=[('view', 'View'), ('comment', 'Comment'), ('edit', 'Edit'), ('manage', 'Manage')], default='view', max_length=20, verbose_name='permission')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='expires at')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='document_shares_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='documents.document', verbose_name='document')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_documents', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'document share',
                'verbose_name_plural': 'document shares',
                'unique_together': {('document', 'user')},
            },
        ),
    ]
