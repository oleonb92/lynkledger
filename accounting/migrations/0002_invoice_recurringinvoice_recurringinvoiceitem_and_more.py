# Generated by Django 4.2.10 on 2025-05-18 23:13

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('organizations', '0002_organizationinvitation'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounting', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('sale', 'Sales Invoice'), ('purchase', 'Purchase Invoice'), ('credit_note', 'Credit Note'), ('debit_note', 'Debit Note')], default='sale', max_length=20, verbose_name='type')),
                ('number', models.CharField(max_length=50, verbose_name='number')),
                ('reference', models.CharField(blank=True, max_length=50, verbose_name='reference')),
                ('date', models.DateField(verbose_name='date')),
                ('due_date', models.DateField(verbose_name='due date')),
                ('party_name', models.CharField(max_length=255, verbose_name='party name')),
                ('party_tax_id', models.CharField(blank=True, max_length=50, verbose_name='party tax ID')),
                ('party_address', models.TextField(blank=True, verbose_name='party address')),
                ('party_email', models.EmailField(blank=True, max_length=254, verbose_name='party email')),
                ('party_phone', models.CharField(blank=True, max_length=50, verbose_name='party phone')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='subtotal')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='tax amount')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='total')),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='amount paid')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='currency')),
                ('exchange_rate', models.DecimalField(decimal_places=6, default=1, max_digits=10, verbose_name='exchange rate')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('terms', models.TextField(blank=True, verbose_name='terms')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('approved', 'Approved'), ('paid', 'Paid'), ('partially_paid', 'Partially Paid'), ('overdue', 'Overdue'), ('void', 'Void'), ('cancelled', 'Cancelled')], default='draft', max_length=20, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_invoices', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='organizations.organization', verbose_name='organization')),
            ],
            options={
                'verbose_name': 'invoice',
                'verbose_name_plural': 'invoices',
                'ordering': ['-date', '-number'],
                'unique_together': {('organization', 'number')},
            },
        ),
        migrations.CreateModel(
            name='RecurringInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('start_date', models.DateField(verbose_name='start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=20, verbose_name='frequency')),
                ('next_date', models.DateField(verbose_name='next date')),
                ('invoice_type', models.CharField(choices=[('sale', 'Sales Invoice'), ('purchase', 'Purchase Invoice'), ('credit_note', 'Credit Note'), ('debit_note', 'Debit Note')], default='sale', max_length=20, verbose_name='invoice type')),
                ('party_name', models.CharField(max_length=255, verbose_name='party name')),
                ('party_tax_id', models.CharField(blank=True, max_length=50, verbose_name='party tax ID')),
                ('party_address', models.TextField(blank=True, verbose_name='party address')),
                ('party_email', models.EmailField(blank=True, max_length=254, verbose_name='party email')),
                ('party_phone', models.CharField(blank=True, max_length=50, verbose_name='party phone')),
                ('terms', models.TextField(blank=True, verbose_name='terms')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('auto_send', models.BooleanField(default=False, verbose_name='auto send')),
                ('days_due', models.PositiveIntegerField(default=30, verbose_name='days due')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_recurring_invoices', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_invoices', to='organizations.organization', verbose_name='organization')),
            ],
            options={
                'verbose_name': 'recurring invoice',
                'verbose_name_plural': 'recurring invoices',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RecurringInvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, verbose_name='description')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='quantity')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='unit price')),
                ('discount_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='discount rate')),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='tax rate')),
                ('income_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recurring_invoice_items', to='accounting.account', verbose_name='income account')),
                ('recurring_invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='accounting.recurringinvoice', verbose_name='recurring invoice')),
                ('tax_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='recurring_invoice_tax_items', to='accounting.account', verbose_name='tax account')),
            ],
            options={
                'verbose_name': 'recurring invoice item',
                'verbose_name_plural': 'recurring invoice items',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='date')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='amount')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='currency')),
                ('exchange_rate', models.DecimalField(decimal_places=6, default=1, max_digits=10, verbose_name='exchange rate')),
                ('method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('check', 'Check'), ('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('online', 'Online Payment'), ('other', 'Other')], max_length=20, verbose_name='payment method')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('voided', 'Voided'), ('refunded', 'Refunded')], default='draft', max_length=20, verbose_name='status')),
                ('reference', models.CharField(blank=True, max_length=100, verbose_name='reference')),
                ('check_number', models.CharField(blank=True, max_length=50, verbose_name='check number')),
                ('check_date', models.DateField(blank=True, null=True, verbose_name='check date')),
                ('card_last4', models.CharField(blank=True, max_length=4, verbose_name='card last 4 digits')),
                ('card_type', models.CharField(blank=True, max_length=20, verbose_name='card type')),
                ('authorization_code', models.CharField(blank=True, max_length=50, verbose_name='authorization code')),
                ('transaction_id', models.CharField(blank=True, max_length=100, verbose_name='transaction ID')),
                ('payment_gateway', models.CharField(blank=True, max_length=50, verbose_name='payment gateway')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('bank_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payments', to='accounting.account', verbose_name='bank account')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_payments', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='accounting.invoice', verbose_name='invoice')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='organizations.organization', verbose_name='organization')),
            ],
            options={
                'verbose_name': 'payment',
                'verbose_name_plural': 'payments',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, verbose_name='description')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='quantity')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='unit price')),
                ('discount_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='discount rate')),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='tax rate')),
                ('income_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoice_income_items', to='accounting.account', verbose_name='income account')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='accounting.invoice', verbose_name='invoice')),
                ('tax_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='invoice_tax_items', to='accounting.account', verbose_name='tax account')),
            ],
            options={
                'verbose_name': 'invoice item',
                'verbose_name_plural': 'invoice items',
            },
        ),
        migrations.CreateModel(
            name='FixedAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('asset_number', models.CharField(max_length=50, unique=True, verbose_name='asset number')),
                ('purchase_date', models.DateField(verbose_name='purchase date')),
                ('purchase_cost', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='purchase cost')),
                ('useful_life_years', models.PositiveIntegerField(verbose_name='useful life (years)')),
                ('salvage_value', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='salvage value')),
                ('depreciation_method', models.CharField(choices=[('straight_line', 'Straight Line'), ('declining_balance', 'Declining Balance'), ('sum_of_years', 'Sum of Years Digits')], default='straight_line', max_length=20, verbose_name='depreciation method')),
                ('status', models.CharField(choices=[('active', 'Active'), ('disposed', 'Disposed'), ('sold', 'Sold'), ('written_off', 'Written Off')], default='active', max_length=20, verbose_name='status')),
                ('current_value', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='current value')),
                ('accumulated_depreciation', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='accumulated depreciation')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='location')),
                ('insurance_policy', models.CharField(blank=True, max_length=50, verbose_name='insurance policy')),
                ('insurance_expiry', models.DateField(blank=True, null=True, verbose_name='insurance expiry')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_assets', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('custodian', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_assets', to=settings.AUTH_USER_MODEL, verbose_name='custodian')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fixed_assets', to='organizations.organization', verbose_name='organization')),
            ],
            options={
                'verbose_name': 'fixed asset',
                'verbose_name_plural': 'fixed assets',
                'ordering': ['asset_number'],
            },
        ),
        migrations.CreateModel(
            name='TaxRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='rate')),
                ('is_compound', models.BooleanField(default=False, verbose_name='compound tax')),
                ('is_recoverable', models.BooleanField(default=True, verbose_name='recoverable')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tax_rates', to='organizations.organization', verbose_name='organization')),
                ('purchase_tax_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_tax_rates', to='accounting.account', verbose_name='purchase tax account')),
                ('sales_tax_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales_tax_rates', to='accounting.account', verbose_name='sales tax account')),
            ],
            options={
                'verbose_name': 'tax rate',
                'verbose_name_plural': 'tax rates',
                'ordering': ['name'],
                'unique_together': {('organization', 'name')},
            },
        ),
    ]
