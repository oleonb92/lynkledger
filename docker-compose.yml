version: '3.8'

services:
  web:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: >
      bash -c "python manage.py migrate &&
               python manage.py collectstatic --noinput &&
               python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=lynkledger.settings
      - DATABASE_URL=postgres://postgres:postgres@db:5432/lynkledger
      - REDIS_URL=redis://redis:6379/0
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://frontend:3000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A lynkledger worker -l INFO
    volumes:
      - ./backend:/app
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=lynkledger.settings
      - DATABASE_URL=postgres://postgres:postgres@db:5432/lynkledger
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - web
      - redis
    healthcheck:
      test: ["CMD", "celery", "-A", "lynkledger", "inspect", "ping", "-d", "celery@$$HOSTNAME"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A lynkledger beat -l INFO
    volumes:
      - ./backend:/app
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=lynkledger.settings
      - DATABASE_URL=postgres://postgres:postgres@db:5432/lynkledger
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - worker
    healthcheck:
      test: ["CMD", "celery", "-A", "lynkledger", "inspect", "ping", "-d", "celery@$$HOSTNAME"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=lynkledger
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    profiles: ["frontend"]
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    command: npm start
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    depends_on:
      - web
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: 